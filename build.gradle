buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.5"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.11"
    }
}

plugins {
    id 'idea'
    id 'net.researchgate.release' version '2.4.1'
}

group = 'com.builtamont'
version = '0.10-SNAPSHOT'

description = """Cassandra Migration"""

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7
targetCompatibility = 1.7

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

repositories {
    mavenCentral()
}

sourceSets {
    itest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

        kotlin.srcDirs += 'src/itest/java'
        java.srcDirs += 'src/itest/java'
        resources.srcDirs += 'src/itest/resources'
    }
}

configurations {
  itestCompile.extendsFrom testCompile
  itestRuntime.extendsFrom testRuntime
}

task itest(type: Test) {
    testClassesDir = sourceSets.itest.output.classesDir
    classpath = sourceSets.itest.runtimeClasspath

    // NOTE: Not needed, but shows which test has run
    //       as each integration test case run can be slow
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
    dependsOn dokkaJavadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

check.dependsOn itest

artifacts {
    archives javadocJar, sourcesJar
}

//signing {
//    sign configurations.archives
//}

build {
    afterReleaseBuild.dependsOn uploadArchives
}

release {
    failOnPublishNeeded = false
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version:'1.0.5'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.21'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.2'
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version:'3.0.0'

    testCompile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.21'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.10.19'
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version:'1.0.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version:'2.0.0.0'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version:'1.16.0'
    testCompile(group: 'org.cassandraunit', name: 'cassandra-unit', version:'3.0.0.1') {
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'logback-core')
        exclude(module: 'logback-classic')
    }
    testCompile group: 'com.google.guava', name: 'guava', version:'19.0'
    testCompile group: 'io.kotlintest', name: 'kotlintest', version:'1.3.5'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version:'1.0.5'

    itestCompile sourceSets.main.output
    itestCompile configurations.testCompile
    itestCompile sourceSets.test.output
    itestRuntime configurations.testRuntime
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Cassandra Migration'
                packaging 'jar'
                description 'Database migration tool for Apache Cassandra / DataStax Enterprise'
                url 'https://github.com/builtamont-oss/cassandra-migration'

                scm {
                    url 'https://github.com/builtamont-oss/cassandra-migration'
                    connection 'scm:git:https://github.com/builtamont-oss/cassandra-migration.git'
                    developerConnection 'scm:git:https://github.com/builtamont-oss/cassandra-migration.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'hhandoko'
                        name 'Herdy Handoko'
                        url 'http://github.com/hhandoko'
                    }
                }
            }
        }
    }
}
