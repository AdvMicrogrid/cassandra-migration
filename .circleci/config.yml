version: 2.1 # use CircleCI 2.1

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs: # basic units of work in a run
  threatrix_scan:
        docker:
            - image: circleci/openjdk:11-jdk-node
        working_directory: ~/repo
        environment:
            MAVEN_OPTS: -Xmx3200m
        steps:
            - *attach_workspace
            - checkout
            - run:
                command: |
                    find . -name "requirements.txt"|xargs cat > requirements-all.txt            
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements-all.txt" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            - run: 
                name: Set up Maven .m2 directory and settings.xml for repository access
                command: |
                    mkdir -p ~/.m2
                    wget -O ~/.m2/settings.xml https://fluence-threatrix.s3.amazonaws.com/artifactory_templates/settings.xml.artifactory_template
            - run: 
                name: Evaluate Maven Dependencies if necessary
                command: |
                    [[ ! -f pom.xml ]] && echo "no pom.xml present" || mvn -f pom.xml dependency:go-offline -Dmaven.test.skip=true -DARTIFACTORY_USERNAME=${ARTIFACTORY_USERNAME} -DARTIFACTORY_PASSWORD=${ARTIFACTORY_PASSWORD}
            - save_cache:
                paths:
                    - ~/.m2
                key: v1-dependencies-{{ checksum "requirements-all.txt" }}

            # Execute Threat Scan
            - run:
                name: Install Threatrix ThreatAgent & Scan
                command: |
                    curl -L ${THREATRIX_AGENT_URL} > /tmp/threatagent.jar
                    java -jar /tmp/threatagent.jar --progress ./
  build:
    docker:
      - image: cimg/base:2023.03
    steps:
      - checkout
      - run: echo "this is the build job"

  test:
    docker:
      - image: cimg/base:2023.03
    steps:
      - checkout
      - run: echo "this is the test job"

workflos:
workflows:
  built_and_test:
    jobs:
      - build
      - threatrix_scan:
          context:
            - threatrix
            - ARTIFACTORY_SERVICE_ACCOUNT    
      - build:
          requires:
            - threatrix_scan 
      - test
